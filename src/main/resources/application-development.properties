## Database Setup First


## Create a Database and add database name where "Add_Your_Database_Name" is below
## Make this file as it was earlier before commiting code
# Change this connection string to this format: jdbc:mysql://{ip_address}:{port}/{database_name}
spring.datasource.url=jdbc:mysql://localhost:3306/Add_Your_Database_Name

## Add your Database Username and Password
spring.datasource.username=Add_Your_UserName
spring.datasource.password=Add_Your_Password

# Hibernate Dialect for MySQL 8
spring.jpa.database-platform=org.hibernate.dialect.MySQLDialect

# Prevent early database interaction
spring.jpa.properties.hibernate.boot.allow_jdbc_metadata_access=false
spring.jpa.hibernate.ddl-auto=update
spring.sql.init.mode=never

# Format SQL
spring.jpa.properties.hibernate.format_sql=true


# Error Handling
server.error.include-binding-errors=always
server.error.include-message=always
server.error.include-stacktrace=never
server.error.include-exception=true

# Logging for Spring Security
logging.level.org.springframework.security=TRACE



# --- Mail Service Setup ---
# I use docker mail service https://hub.docker.com/r/maildev/maildev
# Or Web based Mail service https://mailtrap.io/
spring.mail.host=Add_Your_Mail_Service_Host
spring.mail.port=Add_Your_Mail_Service_Port
spring.mail.username=Add_Your_Mail_Service_Username
spring.mail.password=Add_Your_Mail_Service_Password
spring.mail.properties.mail.smtp.auth=Add_Your_Mail_Service_SMTP
spring.mail.properties.mail.starttls.enable=Add_Your_Mail_Service_Start_TLS
spring.mail.properties.domain_name=Add_Your_Mail_Service_Domain_Name



# --- Oauth 2.0 Configurations ---
spring.security.oauth2.client.registration.google.client-name=google
spring.security.oauth2.client.registration.google.client-id=ADD_YOUR_CLIENT_ID
spring.security.oauth2.client.registration.google.client-secret=ADD_YOUR_SECRET_KEY
spring.security.oauth2.client.registration.google.scope=email,profile